data$result[data$result == "ipsweep."] = "probe"
data$result[data$result == "portsweep."] = "probe"
data$result[data$result == "nmap."] = "probe"
data$result[data$result == "satan."] = "probe"
data$result[data$result == "buffer_overflow."] = "u2r"
data$result[data$result == "loadmodule."] = "u2r"
data$result[data$result == "perl."] = "u2r"
data$result[data$result == "rootkit."] = "u2r"
data$result[data$result == "back."] = "dos"
data$result[data$result == "land."] = "dos"
data$result[data$result == "neptune."] = "dos"
data$result[data$result == "pod."] = "dos"
data$result[data$result == "smurf."] = "dos"
data$result[data$result == "teardrop."] = "dos"
data$result[data$result == "ftp_write."] = "r2l"
data$result[data$result == "guess_passwd."] = "r2l"
data$result[data$result == "imap."] = "r2l"
data$result[data$result == "multihop."] = "r2l"
data$result[data$result == "phf."] = "r2l"
data$result[data$result == "spy."] = "r2l"
data$result[data$result == "warezclient."] = "r2l"
data$result[data$result == "warezmaster."] = "r2l"
data$result[data$result == "normal."] = "normal"
data$result = as.factor(data$result)
library(corrplot)
data2 <- data[,5:41]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
install.packages("corrplot")
library(corrplot)
install.packages("corrplot")
library(corrplot)
library(corrplot)
data2 <- data[,5:41]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
data2 <- data[,5:41]
data2
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
correlation <- corr(data2)
correlation123 <- cor(data2)
correlation123 <- corelation(data2)
correlation123 <- correlation(data2)
correlation123 <- cor(data2,y=NULL)
data2 <- data[,5:41]
data3 <- data[,5:41]
data3
correlation <- cor(data2)
correlation <- cor(data3)
qplot(dst_host_same_src_port_rate,dst_host_srv_diff_host_rate,colour=result,data=data)
qplot(service,flag,colour=result,data=data)
x <- qplot(duration,src_bytes,colour=result,data=data)
x
qplot(service,protocol_type,colour=result,data=data)
qplot(flag,land,colour=result,data=data)
qplot(serror_rate,srv_serror_rate,colour=result,data=data)
qplot(duration,src_bytes,colour=result,data=data)
A=table(data$flag,data$result)
round(prop.table(A)*100,1)
library(randomForest)
setwd("F://Rsoftware/NIS")
getwd()
library(caret)
data<-read.table("test_data.csv",sep = ",")
str(data)
colnames(data) = c("duration", "protocol_type", "service", "flag", "src_bytes", "dst_bytes",
"land", "wrong_fragment", "urgent", "hot", "num_failed_logins", "logged_in",
"num_compromised", "root_shell", "su_attempted", "num_root", "num_file_creations",
"num_shells", "num_access_files", "num_outbound_cmds", "is_hot_login",
"is_guest_login", "count", "srv_count", "serror_rate", "srv_serror_rate",
"rerror_rate","srv_rerror_rate", "same_srv_rate", "diff_srv_rate",
"srv_diff_host_rate", "dst_host_count","dst_host_srv_count","dst_host_same_srv_rate",
"dst_host_diff_srv_rate", "dst_host_same_src_port_rate", "dst_host_srv_diff_host_rate",
"dst_host_serror_rate","dst_host_srv_serror_rate", "dst_host_rerror_rate", "dst_host_srv_rerror_rate",
"result")
data$duration = as.numeric(as.character(data$duration))
data$protocol_type = factor(data$protocol_type)
data$service = factor(data$service)
data$flag = factor(data$flag)
data$src_bytes = as.numeric(as.character(data$src_bytes))
data$dst_bytes = as.numeric(as.character(data$dst_bytes))
data$land = factor(data$land)
data$wrong_fragment = as.numeric(as.character(data$wrong_fragment))
data$urgent = as.numeric(as.character(data$urgent))
data$hot = as.numeric(as.character(data$hot))
data$num_failed_logins = as.numeric(as.character(data$num_failed_logins))
data$logged_in = factor(data$logged_in)
data$num_compromised = as.numeric(as.character(data$num_compromised))
data$root_shell = factor(data$root_shell)
data$su_attempted = factor(data$su_attempted)
data$num_root = as.numeric(as.character(data$num_root))
data$num_file_creations = as.numeric(as.character(data$num_file_creations))
data$num_shells = as.numeric(as.character(data$num_shells))
data$num_access_files = as.numeric(as.character(data$num_access_files))
# data$num_outbound_cmds = as.numeric(as.character(data$num_outbound_cmds))
# data$is_hot_login = factor(data$is_hot_login)
data$is_guest_login = factor(data$is_guest_login)
data$count = as.numeric(as.character(data$count))
data$srv_count = as.numeric(as.character(data$srv_count))
data$serror_rate = as.numeric(as.character(data$serror_rate))
data$srv_serror_rate = as.numeric(as.character(data$srv_serror_rate))
data$rerror_rate = as.numeric(as.character(data$rerror_rate))
data$srv_rerror_rate = as.numeric(as.character(data$srv_rerror_rate))
data$same_srv_rate = as.numeric(as.character(data$same_srv_rate))
data$diff_srv_rate = as.numeric(as.character(data$diff_srv_rate))
data$srv_diff_host_rate = as.numeric(as.character(data$srv_diff_host_rate))
data$dst_host_count = as.numeric(as.character(data$dst_host_count))
data$dst_host_srv_count = as.numeric(as.character(data$dst_host_srv_count))
data$dst_host_same_srv_rate = as.numeric(as.character(data$dst_host_same_srv_rate))
data$dst_host_diff_srv_rate = as.numeric(as.character(data$dst_host_diff_srv_rate))
data$dst_host_same_src_port_rate = as.numeric(as.character(data$dst_host_same_src_port_rate))
data$dst_host_srv_diff_host_rate = as.numeric(as.character(data$dst_host_srv_diff_host_rate))
data$dst_host_serror_rate = as.numeric(as.character(data$dst_host_serror_rate))
data$dst_host_srv_serror_rate = as.numeric(as.character(data$dst_host_srv_serror_rate))
data$dst_host_rerror_rate = as.numeric(as.character(data$dst_host_rerror_rate))
data$dst_host_srv_rerror_rate = as.numeric(as.character(data$dst_host_srv_rerror_rate))
data$result = as.character(data$result)
data$result[data$result == "ipsweep."] = "probe"
data$result[data$result == "portsweep."] = "probe"
data$result[data$result == "nmap."] = "probe"
data$result[data$result == "satan."] = "probe"
data$result[data$result == "buffer_overflow."] = "u2r"
data$result[data$result == "loadmodule."] = "u2r"
data$result[data$result == "perl."] = "u2r"
data$result[data$result == "rootkit."] = "u2r"
data$result[data$result == "back."] = "dos"
data$result[data$result == "land."] = "dos"
data$result[data$result == "neptune."] = "dos"
data$result[data$result == "pod."] = "dos"
data$result[data$result == "smurf."] = "dos"
data$result[data$result == "teardrop."] = "dos"
data$result[data$result == "ftp_write."] = "r2l"
data$result[data$result == "guess_passwd."] = "r2l"
data$result[data$result == "imap."] = "r2l"
data$result[data$result == "multihop."] = "r2l"
data$result[data$result == "phf."] = "r2l"
data$result[data$result == "spy."] = "r2l"
data$result[data$result == "warezclient."] = "r2l"
data$result[data$result == "warezmaster."] = "r2l"
data$result[data$result == "normal."] = "normal"
data$result = as.factor(data$result)
qplot(dst_host_same_src_port_rate,dst_host_srv_diff_host_rate,colour=result,data=data)
qplot(service,flag,colour=result,data=data)
x <- qplot(duration,src_bytes,colour=result,data=data)
x
qplot(service,protocol_type,colour=result,data=data)
qplot(flag,land,colour=result,data=data)
qplot(serror_rate,srv_serror_rate,colour=result,data=data)
qplot(duration,src_bytes,colour=result,data=data)
A=table(data$flag,data$result)
round(prop.table(A)*100,1)
install.packages("randomForest")
install.packages("randomForest")
setwd
setwd("F://Rsoftware/NIS")
getwd()
install.packages("randomForest")
install.packages("randomForest")
setwd("F://Rsoftware/NIS")
getwd()
install.packages("randomForest_4.6-14.tar.gz", repos = NULL, type="source")
install.packages("randomForest", repos = NULL, type="source")
install.packages("randomForest-master", repos = NULL, type="source")
library(randomForest)
install.packages("randomForest")
install.packages("randomForest")
setwd("F://Rsoftware/NIS")
getwd()
library(randomForest)
library(caret)
data<-read.table("test-data.csv",sep = ",")
data<-read.table("test_data.csv",sep = ",")
str(data)
summary(data)
head(data)
tail(data)
colnames(data) = c("duration", "protocol_type", "service", "flag", "src_bytes", "dst_bytes",
"land", "wrong_fragment", "urgent", "hot", "num_failed_logins", "logged_in",
"num_compromised", "root_shell", "su_attempted", "num_root", "num_file_creations",
"num_shells", "num_access_files", "num_outbound_cmds", "is_hot_login",
"is_guest_login", "count", "srv_count", "serror_rate", "srv_serror_rate",
"rerror_rate","srv_rerror_rate", "same_srv_rate", "diff_srv_rate",
"srv_diff_host_rate","dst_host_count","dst_host_srv_count",
"dst_host_same_srv_rate", "dst_host_diff_srv_rate",
"dst_host_same_src_port_rate", "dst_host_srv_diff_host_rate",
"dst_host_serror_rate","dst_host_srv_serror_rate", "dst_host_rerror_rate",
"dst_host_srv_rerror_rate", "result")
colnames(data)
```
## Pre Processing
```{r pre-processing, echo=TRUE}
## Pre Processing
```{r pre-processing, echo=TRUE}
#DOS: denial-of-service, e.g. syn flood;
#R2L: unauthorized access from a remote machine, e.g. guessing password;
#U2R:  unauthorized access to local superuser (root) privileges, e.g., various ``buffer overflow'' attacks;
#probing: surveillance and other probing, e.g., port scanning.
data$result = as.character(data$result)
data$result[data$result == "ipsweep."] = "probe"
data$result[data$result == "portsweep."] = "probe"
data$result[data$result == "nmap."] = "probe"
data$result[data$result == "satan."] = "probe"
data$result[data$result == "buffer_overflow."] = "u2r"
data$result[data$result == "loadmodule."] = "u2r"
data$result[data$result == "perl."] = "u2r"
data$result[data$result == "rootkit."] = "u2r"
data$result[data$result == "back."] = "dos"
data$result[data$result == "land."] = "dos"
data$result[data$result == "neptune."] = "dos"
data$result[data$result == "pod."] = "dos"
data$result[data$result == "smurf."] = "dos"
data$result[data$result == "teardrop."] = "dos"
data$result[data$result == "ftp_write."] = "r2l"
data$result[data$result == "guess_passwd."] = "r2l"
data$result[data$result == "imap."] = "r2l"
data$result[data$result == "multihop."] = "r2l"
data$result[data$result == "phf."] = "r2l"
data$result[data$result == "spy."] = "r2l"
data$result[data$result == "warezclient."] = "r2l"
data$result[data$result == "warezmaster."] = "r2l"
data$result[data$result == "normal."] = "normal"
data$result = as.factor(data$result)
```
data$result = as.character(data$result)
data$result[data$result == "ipsweep."] = "probe"
data$result[data$result == "portsweep."] = "probe"
data$result[data$result == "nmap."] = "probe"
data$result[data$result == "satan."] = "probe"
data$result[data$result == "buffer_overflow."] = "u2r"
data$result[data$result == "loadmodule."] = "u2r"
data$result[data$result == "perl."] = "u2r"
data$result[data$result == "rootkit."] = "u2r"
data$result[data$result == "back."] = "dos"
data$result[data$result == "land."] = "dos"
data$result[data$result == "neptune."] = "dos"
data$result[data$result == "pod."] = "dos"
data$result[data$result == "smurf."] = "dos"
data$result[data$result == "teardrop."] = "dos"
data$result[data$result == "ftp_write."] = "r2l"
data$result[data$result == "guess_passwd."] = "r2l"
data$result[data$result == "imap."] = "r2l"
data$result[data$result == "multihop."] = "r2l"
data$result[data$result == "phf."] = "r2l"
data$result[data$result == "spy."] = "r2l"
data$result[data$result == "warezclient."] = "r2l"
data$result[data$result == "warezmaster."] = "r2l"
data$result[data$result == "normal."] = "normal"
data$result = as.factor(data$result)
```{r correlation, echo=TRUE}
library(corrplot)
data2 <- data[,5:41]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
```
library(corrplot)
data2 <- data[5:41,]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
library(corrplot)
data2 <- data[5:41]
colnames(data2) <- NULL
correlation <- cor(data2)
corrplot(correlation, method="circle", na.label= '.')
qplot(dst_host_same_src_port_rate,dst_host_srv_diff_host_rate,colour=result,data=data)
qplot(service,flag,colour=result,data=data)
qplot(duration,src_bytes,colour=result,data=data)
A=table(data$flag,data$result)
round(prop.table(A)*100,1)
library(randomForest)
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
data1<-data[,c("srv_rerror_rate",   "rerror_rate", "flag","dst_host_rerror_rate" ,
"logged_in" ,"dst_bytes","src_bytes","num_compromised" ,
"dst_host_srv_count","duration" ,"dst_host_same_src_port_rate","dst_host_diff_srv_rate" ,
"dst_host_count","dst_host_srv_serror_rate","count","hot" ,
"dst_host_same_srv_rate","dst_host_srv_diff_host_rate" ,"dst_host_serror_rate" ,"serror_rate",
"srv_serror_rate" ,"diff_srv_rate","srv_count","srv_diff_host_rate","protocol_type","result" )]
inTrain <- createDataPartition(y=data1$result,p=0.02, list=FALSE)
training <- data1[inTrain,]
testing <- data1[-inTrain,]
dim(training)
modFit <- train(result ~ .,method="rf",data=training)
modFit
modFit <- train(result ~ .,method="rf",data=training)
modFit <- train(result ~ .,method="rf",data=training)
modFit
getTree(modFit$finalModel,k=2)
modFit <- train(result ~ .,data=training,method="rf",prox=TRUE)
library(corrplot)
data2 <- data[,5:41]
data2
colnames(data2) <- NULL
colnames(data2)
data2
correlation <- cor(data2)
View(data2)
View(data2)
data2 <- data[,5:41]
data2
correlation <- cor(data2)
View(data2)
View(data2)
View(data)
View(data)
correlation <- cor(data2,use="complete.obs",method = "pearson")
sapply(data2, is.numeric)
my_num_data <- data2[, sapply(data2, is.numeric)]
my_num_data
View(data)
View(data)
View(data)
setwd("F://Rsoftware/New")
getwd()
d1 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
library(ggplot2)
d1 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
d1 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = movies, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
p1 <- ggplot(data = movies, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = movies, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = movies, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = movies, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
setwd("F://Rsoftware/DataSet's/Crime/SET")
getwd()
crimeData<-read.csv("01_District_wise_crimes_committed_IPC_2001_2012.csv")
crimeData
View(crimeData)
View(crimeData)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT TO MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
library(ggplot2)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT TO MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
library(ggplot2)
library(dplyr)
library(caret)
library(statsr)
library(gridExtra)
library(GGally)
library(ggthemes)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT TO MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
p1 <- ggplot(data = crimeData, aes(x = DACOITY)) + geom_histogram(colour = "black", fill = "skyblue", binwidth = .3)
p2 <- ggplot(data = crimeData, aes(x = MURDER)) + geom_histogram(colour = "black", fill = "salmon", binwidth = 40000, alpha = 0.5)
p3 <- ggplot(data = crimeData, aes(x = ATTEMPT.TO.MURDER)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5, alpha = 0.5)
p4 <- ggplot(data = crimeData, aes(x =RAPE )) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5, alpha = 0.7)
grid.arrange(p1, p2, p3, p4, nrow = 1, ncol = 4)
d1 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = critics_rating)) + geom_point()
d2 <- ggplot(data = training, aes(y = imdb_rating, x = critics_score, colour = audience_rating)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
View(training)
View(training)
heatmap(as.matrix(crimeData))
max_rape<-max(crimeData$RAPE)
max_rape
max_murder<-max(crimeData$MURDER)
max_murder
plot(crimeData$RAPE,crimeData$MURDER,type = "p",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder")
plot(crimeData$RAPE,crimeData$MURDER,type = "n",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder")
plot(crimeData$RAPE,crimeData$MURDER,type = "s",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder")
plot(crimeData$RAPE,crimeData$MURDER,type = "p",xlim = c(0,max_rape),ylim = c(0,max_murder),main = "MURDER vs RAPE",xlab = "Rape",ylab = "Murder",col=c("red","blue"))
counts<-table(crimeData$YEAR)
counts
barplot(counts,main = "Crime per Year",xlab = "Years",ylab = "Count",legend=rownames(counts),col = c("red","green","blue","yellow","black","orange","violet","skyblue"))
barplot(counts,main = "Crime per Year",xlab = "Years",ylab = "Count",col = c("red","green","blue","yellow","black","orange","violet","skyblue"))
slice<-c(crimeData$MURDER,crimeData$RAPE,crimeData$KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,crimeData$DACOITY,crimeData$CRUELTY.BY.HUSBAND.OR.HIS.RELATIVES,crimeData$ROBBERY,crimeData$KIDNAPPING...ABDUCTION)
lbls<-c("Murder","Rape","Kidnaping and abuction of women and girls","Dacoity","Cruelty by husband and his relative","Robbery","Kidnapping and Abduction")
pie(slice,labels=lbls,col = rainbow(length(lbls)))
sum_rape<-sum(crimeData$RAPE)
sum_rape
sum_murder<-sum(crimeData$MURDER)
sum_murder
sum_KABOWC<-sum(crimeData$KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS)
sum_KABOWC
sum_dacoity<-sum(crimeData$DACOITY)
sum_dacoity
sum_CBHAHR<-sum(crimeData$CRUELTY.BY.HUSBAND.OR.HIS.RELATIVES)
sum_CBHAHR
sum_robbery<-sum(crimeData$ROBBERY)
sum_robbery
sum_KAA<-sum(crimeData$KIDNAPPING...ABDUCTION)
sum_KAA
sum_roits<-sum(crimeData$RIOTS)
sum_roits
slice<-c(crimeData$MURDER,crimeData$RAPE,crimeData$KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,crimeData$DACOITY,crimeData$CRUELTY.BY.HUSBAND.OR.HIS.RELATIVES,crimeData$ROBBERY,crimeData$KIDNAPPING...ABDUCTION,crimeData$RIOTS)
slice<-c(sum_rape,sum_murder,sum_KABOWC,sum_dacoity,sum_CBHAHR,sum_robbery,sum_KAA,sum_roits)
slice
lbls<-c("RAPE","MURDER","KABOWC","DACOITY","CBHAHR","ROBBERY","KAA","ROITS")
length(lbls)
pie(slice,labels = lbls,col = rainbow(length(lbls)))
pie(slice,labels = lbls,col = rainbow(length(lbls)),main = "Pie Chart of different crimes during 2001-2012")
boxplot(crimeData$THEFT~crimeData$CHEATING)
boxplot(crimeData$THEFT)
boxplot(crimeData$THEFT)
p_genreimdb <- ggplot(crimeData, aes(x=factor(STATE.UT), y=ASSAULT.ON.WOMEN.WITH.INTENT.TO.OUTRAGE.HER.MODESTY)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_genreimdb + ggtitle("State wise crime on women") + geom_hline(yintercept =median(crimeData$ASSAULT.ON.WOMEN.WITH.INTENT.TO.OUTRAGE.HER.MODESTY, na.rm = TRUE), col = "royalblue",lwd = 1)
p_genreimdb <- ggplot(crimeData, aes(x=factor(STATE.UT), y=RAPE)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_genreimdb + ggtitle("State wise rape data") + geom_hline(yintercept =median(crimeData$RAPE, na.rm = TRUE), col = "royalblue",lwd = 1)
plot(crimeData$MURDER,crimeData$ATTEMPT.TO.MURDER, main="Murder vs Attempt to murder", xlab = "MURDER", ylab="ATTEMPT TO MURDER")
abline(lm(crimeData$ATTEMPT.TO.MURDER~crimeData$MURDER),col = "royalblue",lwd = 1)
plot(crimeData$MURDER,crimeData$ATTEMPT.TO.MURDER, main="Murder vs Attempt to murder", xlab = "MURDER", ylab="ATTEMPT TO MURDER",col=c("red","blue"))
abline(lm(crimeData$ATTEMPT.TO.MURDER~crimeData$MURDER),col = "royalblue",lwd = 1)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, col=c("red","blue"))) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, col=c("green","orange"))) + geom_point() d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,col=c("black","red")))+geom_point() d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,col=c("orange","blue")))+geom_point()
grid.arrange(d1, d2,d3,d4, nrow = 2, ncol = 2)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, col=c("red","blue"))) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, col=c("green","orange"))) + geom_point()
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,col=c("black","red")))+geom_point()
d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,col=c("orange","blue")))+geom_point()
grid.arrange(d1, d2,d3,d4, nrow = 2, ncol = 2)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, col=c("red","blue"))) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, col=c("green","orange"))) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, colour=COUNTERFIETING) + geom_point()
54
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, colour=COUNTERFIETING) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, colour=COUNTERFIETING) + geom_point()
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER, colour=COUNTERFIETING) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, colour=COUNTERFIETING) + geom_point()
d1 <- ggplot(data = crimeData, aes(y = MURDER, x = ATTEMPT.TO.MURDER,colour=COUNTERFIETING )) + geom_point()
d2 <- ggplot(data = crimeData, aes(y = RAPE, x = CUSTODIAL.RAPE, colour=COUNTERFIETING)) + geom_point()
grid.arrange(d1, d2, nrow = 1, ncol = 2)
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING)+geom_point()
d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,colour=COUNTERFIETING))+geom_point()
grid.arrange(d3,d4, nrow = 1, ncol = 2)
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING)+geom_point()
1
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING)+geom_point()
8
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING))+geom_point()
> d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,colour=COUNTERFIETING))+geom_point()
d3<-ggplot(data = crimeData,aes(y=KIDNAPPING...ABDUCTION,x=KIDNAPPING.AND.ABDUCTION.OF.WOMEN.AND.GIRLS,colour=COUNTERFIETING))+geom_point()
d4<-ggplot(data = crimeData,aes(y=DACOITY,x=PREPARATION.AND.ASSEMBLY.FOR.DACOITY,colour=COUNTERFIETING))+geom_point()
grid.arrange(d3,d4, nrow = 1, ncol = 2)
View(data3)
g1 <- ggplot(data = crimeData, aes(x = CRIMINAL.BREACH.OF.TRUST)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1
heatmap(as.matrix(crimeData),Rowv = NA,Colv = NA,scale="column",col=cm.colors(256),xlab = "Attributes",main = "Heatmap")
heatmap(as.matrix(crimeData$CRIMINAL.BREACH.OF.TRUST),Rowv = NA,Colv = NA,scale="column",col=cm.colors(256),xlab = "Criminal breach of trust",main = "Heatmap")
heatmap(as.matrix(crimeData$CRIMINAL.BREACH.OF.TRUST,crimeData$DOWRY.DEATHS),Rowv = NA,Colv = NA,scale="column",col=cm.colors(256),xlab = "Criminal breach of trust",main = "Heatmap")
cdata<-c(crimeData$CRIMINAL.BREACH.OF.TRUST,crimeData$DOWRY.DEATHS)
cdata
g1 <- ggplot(data = crimeData, aes(x =DOWRY.DEATHS)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1 <- ggplot(data = crimeData, aes(x =crimeData$MURDER)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1 <- ggplot(data = crimeData, aes(x =MURDER)) + geom_histogram(colour = "black", fill = "orange", alpha = 0.5)
g1
library(Commander)
install.packages("Commander")
library(lattice)
mtcars
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,col=rainbow(length(YEAR)),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=rainbow(length(YEAR)),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=cm.colors(256),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=c("red","blue","green"),pch=17)
cloud(RAPE~DOWRY.DEATHS * INSULT.TO.MODESTY.OF.WOMEN,data=crimeData,col=c("red","blue","green"),pch=17,main="3D Scatter Plot to show the occurance of crime against women")
library(plotly)
plot_ly(crimeData,x=~RAPE,y=~DOWRY.DEATHS,z=~INSULT.TO.MODESTY.OF.WOMEN)
plot_ly(crimeData,x=~RAPE,y=~DOWRY.DEATHS,z=~INSULT.TO.MODESTY.OF.WOMEN,colors = c("green","orange","black"))
plot_ly(z=~crimeData$MURDER,type = "surface")
plot_ly(z=~crimeData$MURDER,type = "surface",pch=17)
heatmap(as.matrix(crimeData),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(256),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(256),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(7),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(15),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
df11<-crimeData[,5:25]
df11
df12<-crimeData[,30]
df12
df12<-crimeData[,5:30]
df12
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=rainbow(7),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(256),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(df12),Rowv = NA,Colv = NA,scale = "column",col=cm.colors(25),xlab = "Attributes",main = "HeatMap")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,scale = "column",col=rainbow(25),xlab = "Attributes",main = "HeatMap")
mtcars
max(crimeData$ROBBERY)
min(crimeData$DACOITY)
median(crimeData$DACOITY,na.rm = FALSE)
save.image("F:/Rsoftware/DataSet's/Crime/SET/crimeset.RData")
savehistory("F:/Rsoftware/DataSet's/Crime/SET/crimeset1.Rhistory")
